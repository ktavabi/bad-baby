general:
  subjects_dir: Null

fetch_raw:
  subjects:
    [
      "bad_101",
      "bad_102",
      "bad_103",
      "bad_104",
      "bad_105",
      "bad_109",
      "bad_110",
      "bad_113",
      "bad_114",
      "bad_116a",
      "bad_116b",
      "bad_117a",
      "bad_118",
      "bad_119a",
      "bad_119b",
      "bad_120b",
      "bad_122a",
      "bad_122b",
      "bad_123a",
      "bad_124a",
      "bad_124b",
      "bad_125a",
      "bad_127a",
      "bad_127b",
      "bad_128a",
      "bad_128b",
      "bad_130a",
      "bad_131a",
      "bad_131b",
      "bad_203",
      "bad_205",
      "bad_207",
      "bad_209a",
      "bad_211a",
      "bad_211b",
      "bad_212",
      "bad_213",
      "bad_214",
      "bad_215a",
      "bad_215b",
      "bad_217",
      "bad_218a",
      "bad_220a",
      "bad_220b",
      "bad_224a",
      "bad_224b",
      "bad_225a",
      "bad_225b",
      "bad_226b",
      "bad_228a",
      "bad_229b",
      "bad_231b",
      "bad_301a",
      "bad_302a",
      "bad_304a",
      "bad_309a",
      "bad_310a",
      "bad_310b",
      "bad_311a",
      "bad_311b",
      "bad_312a",
      "bad_312b",
      "bad_314a",
      "bad_316b",
      "bad_921a",
      "bad_921b",
      "bad_923b",
      "bad_925b",
    ]
  structurals: Null
  dates: Null

  run_names: ["%s_am", "%s_mmn", "%s_ids"]
  runs_empty: ["%s_erm"]
  subject_run_indices: { __default__: [0, 1, 2] }
  acq_ssh: kasga.ilabs.uw.edu
  acq_dir:
    - /brainstudio/bad_baby
    - /data06/larsoner/for_hank/brainstudio
    # Eventually the ^/brainstudio exceptions can hopefully be removed once
    # Hank migrates the files to brainstudio
  acq_exclude:
    - /brainstudio/bad_baby/bad_baby
    - ^/brainstudio/bad_baby/bad_119b
    - ^/brainstudio/bad_baby/bad_120b
    - ^/brainstudio/bad_baby/bad_122a
    - ^/brainstudio/bad_baby/bad_124a
    - ^/brainstudio/bad_baby/bad_127b
    - ^/brainstudio/bad_baby/bad_128a
    - ^/brainstudio/bad_baby/bad_128b
    - ^/brainstudio/bad_baby/bad_130a
    - ^/brainstudio/bad_baby/bad_131a
    - ^/brainstudio/bad_baby/bad_131b
    - ^/brainstudio/bad_baby/bad_203
    - ^/brainstudio/bad_baby/bad_205
    - ^/brainstudio/bad_baby/bad_207
    - ^/brainstudio/bad_baby/bad_212
    - ^/brainstudio/bad_baby/bad_213
    - ^/brainstudio/bad_baby/bad_218a
    - ^/brainstudio/bad_baby/bad_225b
    - ^/brainstudio/bad_baby/bad_226b
    - ^/brainstudio/bad_baby/bad_229b
    - ^/brainstudio/bad_baby/bad_231b
    - ^/brainstudio/bad_baby/bad_304a
    - ^/brainstudio/bad_baby/bad_309a
    - ^/brainstudio/bad_baby/bad_310a
    - ^/brainstudio/bad_baby/bad_312b
    - ^/brainstudio/bad_baby/bad_314a
    - ^/brainstudio/bad_baby/bad_316b
    - ^/brainstudio/bad_baby/bad_921b
    - ^/brainstudio/bad_baby/bad_925b
    - /data06/larsoner/for_hank/brainstudio/bad_baby/bad_104
    - /data06/larsoner/for_hank/brainstudio/bad_baby/bad_109

scoring:
  score: null

preprocessing:
  multithreading:
    n_jobs: 4
    n_jobs_fir: 4
    n_jobs_resample: 4
  bads:
    mf_prebad:
      {
        bad_101: [MEG0142, MEG1442],
        bad_102: [MEG0142, MEG0422, MEG1442, MEG2532],
        bad_103: [MEG0142, MEG0422, MEG0933, MEG1442, MEG1722],
        bad_104: [MEG0142, MEG1432, MEG1941],
        bad_105: [MEG0422],
        bad_109: [MEG0142, MEG1722, MEG2521],
        bad_110: [MEG0142, MEG0422, MEG0432, MEG1722],
        bad_113: [MEG0142, MEG1223, MEG1722, MEG1823, MEG2131],
        bad_114: [MEG0142, MEG0212, MEG0422, MEG2112, MEG2623, MEG2011],
        bad_116a:
          [
            MEG0142,
            MEG0413,
            MEG1213,
            MEG1533,
            MEG1722,
            MEG2623,
            MEG1941,
            MEG2641,
          ],
        bad_116b:
          [
            MEG0122,
            MEG0313,
            MEG0933,
            MEG1413,
            MEG1823,
            MEG2112,
            MEG2623,
            MEG2643,
            MEG1931,
          ],
        bad_117a: [MEG0142, MEG0422, MEG1112, MEG1823, MEG2623],
        bad_118: [MEG0142, MEG1442],
        bad_119a: [MEG0142, MEG1543, MEG1722, MEG2623],
        bad_119b:
          [
            MEG0122,
            MEG0713,
            MEG1433,
            MEG2112,
            MEG2623,
            MEG2643,
            MEG1631,
            MEG1931,
          ],
        bad_120b:
          [
            MEG0122,
            MEG0713,
            MEG1433,
            MEG2112,
            MEG2643,
            MEG1631,
            MEG1821,
            MEG1931,
            MEG2531,
          ],
        bad_122a: [MEG0142, MEG0422, MEG1543, MEG2623],
        bad_122b:
          [
            MEG0122,
            MEG0333,
            MEG0812,
            MEG1223,
            MEG1432,
            MEG1543,
            MEG2112,
            MEG2623,
            MEG2643,
            MEG1931,
            MEG2611,
          ],
        bad_123a: [MEG0142, MEG1023, MEG1413, MEG2112],
        bad_124a: [MEG0142, MEG0422, MEG1722, MEG2623, MEG0131],
        bad_124b: [MEG2112, MEG2623, MEG2643, MEG1931],
        bad_125a:
          [MEG0122, MEG0313, MEG1542, MEG2112, MEG2532, MEG2623, MEG2643],
        bad_127a:
          [
            MEG0122,
            MEG0413,
            MEG0422,
            MEG0933,
            MEG1723,
            MEG2112,
            MEG2113,
            MEG2623,
            MEG1931,
          ],
        bad_127b:
          [MEG0122, MEG0222, MEG2112, MEG2532, MEG2623, MEG2643, MEG0911],
        bad_128a:
          [
            MEG0422,
            MEG0933,
            MEG1413,
            MEG1523,
            MEG2112,
            MEG2623,
            MEG2643,
            MEG0611,
            MEG1041,
          ],
        bad_128b: [MEG0122, MEG2112, MEG2443, MEG2623, MEG2643, MEG1141],
        bad_130a: [MEG0621, MEG0933, MEG2112, MEG1831],
        bad_131a: [MEG0933, MEG2623, MEG1831],
        bad_131b: [MEG0122, MEG0331, MEG1523, MEG2112, MEG2623],
        bad_203: [MEG0142, MEG0313, MEG1442, MEG2532],
        bad_205: [MEG0142, MEG1442, MEG1722, MEG2623],
        bad_207: [MEG0422, MEG1643, MEG1722, MEG2623],
        bad_209a:
          [
            MEG0142,
            MEG0422,
            MEG1533,
            MEG1722,
            MEG2512,
            MEG2623,
            MEG0111,
            MEG1141,
            MEG2431,
          ],
        bad_211a: [MEG0142, MEG1112, MEG1442, MEG2112, MEG2623],
        bad_211b:
          [
            MEG0122,
            MEG1423,
            MEG1432,
            MEG2112,
            MEG2213,
            MEG2623,
            MEG2643,
            MEG1931,
          ],
        bad_212: [MEG0142, MEG0413, MEG0331],
        bad_213: [MEG0142, MEG0422, MEG1213, MEG2113, MEG2623],
        bad_214: [MEG0142, MEG1442, MEG1722, MEG2532, MEG2623, MEG0711],
        bad_215a: [MEG0142, MEG1112, MEG1433],
        bad_215b:
          [
            MEG0122,
            MEG0933,
            MEG2112,
            MEG2643,
            MEG0331,
            MEG1041,
            MEG1931,
            MEG2521,
          ],
        bad_217: [MEG0142, MEG0422, MEG1722, MEG2233, MEG2623, MEG0711],
        bad_218a: [MEG0142, MEG0313, MEG2532, MEG2623],
        bad_220a: [MEG0142, MEG0413, MEG0422, MEG0433, MEG1722],
        bad_220b: [MEG0122, MEG1723, MEG2112, MEG2643],
        bad_224a: [MEG0122, MEG2112, MEG1931],
        bad_224b: [MEG0122, MEG2112, MEG2623, MEG1931, MEG2521],
        bad_225a:
          [MEG0122, MEG0113, MEG1223, MEG1823, MEG2112, MEG2623, MEG2311],
        bad_225b:
          [MEG0122, MEG0422, MEG0922, MEG1143, MEG2112, MEG2623, MEG0641],
        bad_226b:
          [
            MEG0122,
            MEG0422,
            MEG2141,
            MEG0922,
            MEG1143,
            MEG1723,
            MEG2112,
            MEG2623,
            MEG0641,
          ],
        bad_228a: [MEG0122, MEG0313, MEG0422, MEG0733, MEG0641, MEG2643],
        bad_229b: [MEG0122, MEG0433, MEG2112, MEG2612, MEG2623, MEG2643],
        bad_231b:
          [
            MEG0122,
            MEG0212,
            MEG0422,
            MEG0933,
            MEG2112,
            MEG2113,
            MEG2512,
            MEG2542,
            MEG2623,
          ],
        bad_301a: [MEG0142, MEG2113, MEG2432, MEG2532, MEG2623, MEG0611],
        bad_302a: [MEG0122, MEG0142, MEG0422, MEG2623],
        bad_304a:
          [MEG0122, MEG0142, MEG0212, MEG0413, MEG2112, MEG1941, MEG2431],
        bad_309a:
          [
            MEG0122,
            MEG0432,
            MEG1042,
            MEG1542,
            MEG2112,
            MEG2542,
            MEG2623,
            MEG2643,
            MEG1931,
          ],
        bad_310a: [MEG0122, MEG0322, MEG1023, MEG2112, MEG2623, MEG2643],
        bad_310b: [MEG0122, MEG1723, MEG2112, MEG2623, MEG1711, MEG1931],
        bad_311a:
          [
            MEG0122,
            MEG0422,
            MEG0933,
            MEG1413,
            MEG1523,
            MEG1542,
            MEG2112,
            MEG2623,
            MEG2643,
            MEG0611,
            MEG1931,
            MEG2521,
          ],
        bad_311b: [MEG0122, MEG2112, MEG2623, MEG2643, MEG1931, MEG2521],
        bad_312a:
          [
            MEG0122,
            MEG2112,
            MEG2113,
            MEG2623,
            MEG2643,
            MEG1421,
            MEG1431,
            MEG1931,
            MEG2521,
          ],
        bad_312b:
          [
            MEG0122,
            MEG1723,
            MEG2112,
            MEG2623,
            MEG2643,
            MEG0331,
            MEG1041,
            MEG2011,
            MEG2521,
          ],
        bad_314a:
          [
            MEG0122,
            MEG0533,
            MEG1413,
            MEG1523,
            MEG2113,
            MEG2623,
            MEG2643,
            MEG1931,
          ],
        bad_316b:
          [MEG0122, MEG0413, MEG1433, MEG2112, MEG2532, MEG2643, MEG2521],
        bad_921a: [MEG0142, MEG0422, MEG1643, MEG1722, MEG2623, MEG2643],
        bad_921b: [MEG0122, MEG0233, MEG0413, MEG2112, MEG2623, MEG2643],
        bad_923b:
          [
            MEG0122,
            MEG0422,
            MEG1723,
            MEG1823,
            MEG2112,
            MEG2532,
            MEG2623,
            MEG2643,
            MEG1931,
          ],
        bad_925b:
          [MEG0122, MEG0413, MEG2112, MEG2623, MEG2643, MEG1931, MEG2521],
      }
    mf_autobad: True
    mf_autobad_type: python
  head_position_estimation:
    coil_t_window: auto
  annotations:
    coil_dist_limit: 0.01
    coil_bad_count_duration_limit: 1.0 # sec
    rotation_limit: 20.0 # deg/s
    translation_limit: 0.01 # m/s
  sss:
    sss_type: python
    hp_type: python
    int_order: 6
    ext_order: 3
    tsss_dur: 10.
    st_correlation: 0.98
    trans_to: twa
    cont_as_esss: True
  filtering:
    lp_cut: 50
    lp_trans: auto
    hp_cut: 0.5
    hp_trans: auto
    filter_length: auto
    fir_design: firwin
    phase: zero
  ssp:
    cont_hp: 12
    cont_hp_trans: 2
    cont_lp: 40
    cont_lp_trans: 2
    cont_reject: {
      __default__: { grad: 1500.e-13, mag: 5000.e-15 },
      bad_130a: { grad: 1500.e-13, mag: 20000.e-15 },
      bad_225b: { grad: 1500.e-13, mag: 20000.e-15 },
      bad_226b: { grad: 1500.e-13, mag: 20000.e-15 },
    }
    proj_nums: { __default__: [[1, 1, 0], [0, 0, 0], [2, 2, 0]] }
    ecg_t_lims: [-0.04, 0.04]
    ssp_ecg_reject:
      {
        __default__: { grad: 2000.e-13, mag: 3000.e-15 },
        bad_105: { grad: 2000.e-13, mag: 5000.e-15 },  # Huge ECG signals
        bad_310b: { grad: 2000.e-13, mag: 5000.e-15 },
      }
    proj_sfreq: 200
    proj_ave: True
    proj_meg: combined

epoching:
  # These limits should work for AM and ASSR, IDs will need a separate
  # epoching step anyway
  tmin: -0.2
  tmax: 1.3
  baseline: Null
  bmin: -0.1
  bmax: 0
  epochs_proj: delayed
  autoreject_thresholds: True
  autoreject_types: ["grad"]
  auto_bad_reject: "auto"
  auto_bad_meg_thresh: 12
  allow_resample: True
  # Hopefully just IDs warn here
  on_missing: warn
  analyses: [All, Individual, Oddball, AM, IDs]
  in_names: [std, ba, wa, tone, s1, s2, s3, s4, s5]
  in_numbers: [103, 104, 105, 1003, 10001, 10002, 10003, 10004, 10005]
  out_names:
    [
      [All],
      [standard, ba, wa],
      [standard, deviant],
      [tone],
      [s1, s2, s3, s4, s5],
    ]
  out_numbers:
    [
      [1, 1, 1, 1, 1, 1, 1, 1, 1],
      [1, 2, 3, -1, -1, -1, -1, -1, -1],
      [1, 2, 2, -1, -1, -1, -1, -1, -1],
      [-1, -1, -1, 1, -1, -1, -1, -1, -1],
      [-1, -1, -1, -1, 1, 2, 3, 4, 5],
    ]
  must_match: [[], [0, 1, 2], [0, 1], [], []]  # 0-based indices, not numbers

covariance:
  cov_method: shrunk
  compute_rank: True
  cov_rank: null
  cov_rank_method: compute_rank
  force_erm_cov_rank_full: False

report:
  psd: False # just for speed
  source_alignment: False
  bem: False
  covariance: True
  whitening: [{ analysis: All, name: All }]
  sensor:
    [
      { analysis: All, name: All, times: "peaks", proj: False },
      { analysis: All, name: All, times: "peaks" },
      { analysis: All, name: All, times: "peaks", proj: "reconstruct" },
      { analysis: Oddball, name: standard, times: "peaks" },
      { analysis: Oddball, name: deviant, times: "peaks" },
      { analysis: AM, name: tone, times: "peaks" },
    ]
